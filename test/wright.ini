[configure]
stages = c, env
with   =
    foo: true
    bar: false

[c:header]
required =
    ctype.h
    errno.h
    inttypes.h
    signal.h
    stdarg.h
    stdbool.h
    stddef.h
    stdio.h
    stdlib.h
    string.h
    time.h
    sys/param.h

required_linux =
    pthread.h

required_osx =
    < required_linux

required_win32 =
    windows.h
    winsock2.h

optional =
    libgen.h
    arpa/inet.h
    net/ethernet.h
    netinet/ip.h
    netinet/udp.h

[c:library]
required =
    m:      math.h
    talloc: talloc.h

required_linux:
    rt:     time.h

required_win32:
    ws2_32: windows.h, winsock2.h

optional =
    bsd:       bsd/bsd.h
    portaudio: portaudio.h
    proc:      libproc.h

[c:define]
optional =
    SO_REUSEADDR: sys/socket.h
    SO_REUSEPORT: sys/socket.h

[c:feature]
optional =
    # Compiler specific
    mingw:                test/have_mingw.c
    inline:               test/have_inline.c
    restrict:             test/have_restrict.c
    binary literals:      test/have_binary_literals.c
    visibility attribute: test/have_visibility_attribute.c
    visibility declspec:  test/have_visibility_declspec.c
    # Libc
    libc ipv6:            test/have_libc_ipv6.c
    libc scope_id:        test/have_libc_scope_id.c
    # Functions
    if_indextoname:       test/have_if_indextoname.c
    getline:              test/have_getline.c
    strtok_r:             test/have_strtok_r.c
    # Types
    socklen_t:            test/have_socklen_t.c
    # Multiplexing
    epoll:                test/have_epoll.c
    /dev/epoll:           test/have_dev_epoll.c
    kqueue:               test/have_kqueue.c
    poll:                 test/have_poll.c
    select:               test/have_select.c

[env:binary]
optional_linux =
    pkg-config: --version

optional_osx =
    < optional_linux

[env:versions]
source = versions

[env:generate]
source = {target}.in
target =
    template

[env:flags]
optional_if_HAVE_PKG_CONFIG =
    pkg-config talloc: pkg-config --cflags talloc, pkg-config --libs talloc
    pkg-config pcap:   pkg-config --cflags pcap, pkg-config --libs pcap

optional_linux:
    pcap-config:       pcap-config --cflags, pcap-config --libs

optional_osx:
    < optional_linux
